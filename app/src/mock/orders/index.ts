import { TOrder } from '@/types/TOrder';
import { productsMock } from '../products';
import { usersMock } from '../users';

export const ordersMock: TOrder[] = [
  {
    id: 'o1',
    status: 'pending',
    price: 150,
    quantity: 2,
    products: [
      {
        id: 'pi1',
        name: productsMock.find((p) => p.id === 'p1')?.name || '',
        price: 50,
        quantity: 1,
        sellerId: 's1',
        buyerId: 'b1',
        productId: 'p1',
        variantId: productsMock[0].variants[0].id || '',
      },
      {
        id: 'pi2',
        name: productsMock.find((p) => p.id === 'p2')?.name || '',
        price: 100,
        quantity: 1,
        sellerId: 's1',
        buyerId: 'b1',
        productId: 'p2',
        variantId: productsMock[1].variants[0].id || '',
      },
    ],
    sellerId: 's1',
    seller: usersMock.find((u) => u.id === 's1'),
    buyerId: 'b1',
    buyer: usersMock.find((u) => u.id === 'b1'),
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: 'o2',
    status: 'processing',
    price: 60,
    quantity: 1,
    products: [
      {
        id: 'pi3',
        name: productsMock.find((p) => p.id === 'p3')?.name || '',
        price: 60,
        quantity: 1,
        sellerId: 's1',
        buyerId: 'b1',
        productId: 'p3',
        variantId: productsMock[2].variants[0].id || '',
      },
    ],
    sellerId: 's1',
    seller: usersMock.find((u) => u.id === 's1'),
    buyerId: 'b1',
    buyer: usersMock.find((u) => u.id === 'b1'),
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: 'o3',
    status: 'delivered',
    price: 122,
    quantity: 1,
    products: [
      {
        id: 'pi4',
        name: productsMock.find((p) => p.id === 'p4')?.name || '',
        price: 122,
        quantity: 1,
        sellerId: 's1',
        buyerId: 'b1',
        productId: 'p4',
        variantId: productsMock[3].variants[0].id || '',
      },
    ],
    sellerId: 's1',
    seller: usersMock.find((u) => u.id === 's1'),
    buyerId: 'b1',
    buyer: usersMock.find((u) => u.id === 'b1'),
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: 'o4',
    status: 'cancelled',
    price: 100,
    quantity: 1,
    products: [
      {
        id: 'pi5',
        name: productsMock.find((p) => p.id === 'p5')?.name || '',
        price: 100,
        quantity: 1,
        sellerId: 's1',
        buyerId: 'b1',
        productId: 'p5',
        variantId: productsMock[4].variants[0].id || '',
      },
    ],
    sellerId: 's1',
    seller: usersMock.find((u) => u.id === 's1'),
    buyerId: 'b1',
    buyer: usersMock.find((u) => u.id === 'b1'),
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: 'o5',
    status: 'pending',
    price: 100,
    quantity: 1,
    products: [
      {
        id: 'pi6',
        name: productsMock.find((p) => p.id === 'p6')?.name || '',
        price: 100,
        quantity: 1,
        sellerId: 's1',
        buyerId: 'b1',
        productId: 'p6',
        variantId: productsMock[5].variants[0].id || '',
      },
    ],
    sellerId: 's1',
    seller: usersMock.find((u) => u.id === 's1'),
    buyerId: 'b1',
    buyer: usersMock.find((u) => u.id === 'b1'),
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];
